name: Backend CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-1
      ECR_REPOSITORY: my-ecr
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      # Deploy to EKS using kubectl
      - name: Update K8s deployment
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'
      - name: Set up kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/${{ secrets.K8S_DEPLOYMENT_NAME }} ${{ secrets.K8S_CONTAINER_NAME }}=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG
          kubectl rollout status deployment/${{ secrets.K8S_DEPLOYMENT_NAME }}

# Replace <your-ecr-repo-name>, <your-eks-cluster-name>, <your-deployment-name>, and <container-name> as needed.
# Store AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY in your GitHub repo secrets for security.
